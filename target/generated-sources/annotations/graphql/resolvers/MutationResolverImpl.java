package graphql.resolvers;

import graphql.kickstart.tools.GraphQLMutationResolver;
import graphql.model.OwnerDto;
import graphql.model.OwnerFieldsDtoInput;
import graphql.model.PetDto;
import graphql.model.PetDtoInput;
import graphql.model.PetFieldsDtoInput;
import graphql.model.PetTypeDto;
import graphql.model.PetTypeDtoInput;
import graphql.model.SpecialtyDto;
import graphql.model.SpecialtyDtoInput;
import graphql.model.UserDto;
import graphql.model.UserDtoInput;
import graphql.model.VetDto;
import graphql.model.VetDtoInput;
import graphql.model.VisitDto;
import graphql.model.VisitDtoInput;
import graphql.model.VisitFieldsDtoInput;
import graphql.model.Void;
import graphql.schema.DataFetchingEnvironment;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.time.LocalDate;
import javax.annotation.processing.Generated;
import org.springframework.samples.petclinic.rest.api.OwnersApi;
import org.springframework.samples.petclinic.rest.api.PetsApi;
import org.springframework.samples.petclinic.rest.api.PettypesApi;
import org.springframework.samples.petclinic.rest.api.SpecialtiesApi;
import org.springframework.samples.petclinic.rest.api.UsersApi;
import org.springframework.samples.petclinic.rest.api.VetsApi;
import org.springframework.samples.petclinic.rest.api.VisitsApi;
import org.springframework.samples.petclinic.rest.dto.OwnerFieldsDto;
import org.springframework.samples.petclinic.rest.dto.PetFieldsDto;
import org.springframework.samples.petclinic.rest.dto.RoleDto;
import org.springframework.samples.petclinic.rest.dto.VisitFieldsDto;

@Generated("Generated by GraphQLify-Java: com.graphqlify.codegen.GraphQLifyAnnotationProcessor")
public class MutationResolverImpl implements GraphQLMutationResolver {
  public PetsApi petsApi;

  public VisitsApi visitsApi;

  public SpecialtiesApi specialtiesApi;

  public UsersApi usersApi;

  public PettypesApi pettypesApi;

  public OwnersApi ownersApi;

  public VetsApi vetsApi;

  public OwnerDto addOwner(OwnerFieldsDtoInput ownerFieldsDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    OwnerFieldsDto ownerFieldsDto_ = new OwnerFieldsDto();
    // Mapping field: firstName
    String ownerFieldsDto_firstName = ownerFieldsDto.getFirstName();
    ownerFieldsDto_.setFirstName(ownerFieldsDto_firstName);
    // Mapping field: lastName
    String ownerFieldsDto_lastName = ownerFieldsDto.getLastName();
    ownerFieldsDto_.setLastName(ownerFieldsDto_lastName);
    // Mapping field: address
    String ownerFieldsDto_address = ownerFieldsDto.getAddress();
    ownerFieldsDto_.setAddress(ownerFieldsDto_address);
    // Mapping field: city
    String ownerFieldsDto_city = ownerFieldsDto.getCity();
    ownerFieldsDto_.setCity(ownerFieldsDto_city);
    // Mapping field: telephone
    String ownerFieldsDto_telephone = ownerFieldsDto.getTelephone();
    ownerFieldsDto_.setTelephone(ownerFieldsDto_telephone);

    org.springframework.samples.petclinic.rest.dto.OwnerDto response = ownersApi.addOwner(ownerFieldsDto_).getBody();

    OwnerDto response_ = new OwnerDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: address
    String response_address = response.getAddress();
    response_.setAddress(response_address);
    // Mapping field: city
    String response_city = response.getCity();
    response_.setCity(response_city);
    // Mapping field: telephone
    String response_telephone = response.getTelephone();
    response_.setTelephone(response_telephone);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: pets
    java.util.List<PetDto> response_pets = new java.util.ArrayList<>();
    for (var item1 : response.getPets()) {
      PetDto item1_ = new PetDto();
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      // Mapping field: birthDate
      LocalDate item1_birthDate = item1.getBirthDate();
      item1_.setBirthDate(item1_birthDate);
      // Mapping field: type
      PetTypeDto item1_type = new PetTypeDto();
      // Mapping field: name
      String item1_type_name = item1.getType().getName();
      item1_type.setName(item1_type_name);
      // Mapping field: id
      Integer item1_type_id = item1.getType().getId();
      item1_type.setId(item1_type_id);
      item1_.setType(item1_type);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: ownerId
      Integer item1_ownerId = item1.getOwnerId();
      item1_.setOwnerId(item1_ownerId);
      // Mapping field: visits
      java.util.List<VisitDto> item1_visits = new java.util.ArrayList<>();
      for (var item2 : item1.getVisits()) {
        VisitDto item2_ = new VisitDto();
        // Mapping field: date
        LocalDate item2_date = item2.getDate();
        item2_.setDate(item2_date);
        // Mapping field: description
        String item2_description = item2.getDescription();
        item2_.setDescription(item2_description);
        // Mapping field: id
        Integer item2_id = item2.getId();
        item2_.setId(item2_id);
        // Mapping field: petId
        Integer item2_petId = item2.getPetId();
        item2_.setPetId(item2_petId);
        item1_visits.add(item2_);
      }
      item1_.setVisits(item1_visits);
      response_pets.add(item1_);
    }
    response_.setPets(response_pets);
    return response_;
  }

  public PetDto addPet(PetDtoInput petDto, DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.PetDto petDto_ = new org.springframework.samples.petclinic.rest.dto.PetDto();
    // Mapping field: name
    String petDto_name = petDto.getName();
    petDto_.setName(petDto_name);
    // Mapping field: birthDate
    LocalDate petDto_birthDate = petDto.getBirthDate();
    petDto_.setBirthDate(petDto_birthDate);
    // Mapping field: type
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petDto_type = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petDto_type_name = petDto.getType().getName();
    petDto_type.setName(petDto_type_name);
    // Mapping field: id
    Integer petDto_type_id = petDto.getType().getId();
    petDto_type.setId(petDto_type_id);
    petDto_.setType(petDto_type);
    // Mapping field: id
    Integer petDto_id = petDto.getId();
    petDto_.setId(petDto_id);
    // Mapping field: ownerId
    Integer petDto_ownerId = petDto.getOwnerId();
    petDto_.setOwnerId(petDto_ownerId);
    // Mapping field: visits
    java.util.List<org.springframework.samples.petclinic.rest.dto.VisitDto> petDto_visits = new java.util.ArrayList<org.springframework.samples.petclinic.rest.dto.VisitDto>();
    for (int _i_ = 0; _i_ < petDto_visits.size(); _i_++) {
      org.springframework.samples.petclinic.rest.dto.VisitDto petDto_visits_i = new org.springframework.samples.petclinic.rest.dto.VisitDto();
      // Mapping field: date
      LocalDate petDto_visits_i_date = petDto.getVisits().get(_i_).getDate();
      petDto_visits_i.setDate(petDto_visits_i_date);
      // Mapping field: description
      String petDto_visits_i_description = petDto.getVisits().get(_i_).getDescription();
      petDto_visits_i.setDescription(petDto_visits_i_description);
      // Mapping field: id
      Integer petDto_visits_i_id = petDto.getVisits().get(_i_).getId();
      petDto_visits_i.setId(petDto_visits_i_id);
      // Mapping field: petId
      Integer petDto_visits_i_petId = petDto.getVisits().get(_i_).getPetId();
      petDto_visits_i.setPetId(petDto_visits_i_petId);
      petDto_visits.add(petDto_visits_i);
    }
    petDto_.setVisits(petDto_visits);

    org.springframework.samples.petclinic.rest.dto.PetDto response = petsApi.addPet(petDto_).getBody();

    PetDto response_ = new PetDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: birthDate
    LocalDate response_birthDate = response.getBirthDate();
    response_.setBirthDate(response_birthDate);
    // Mapping field: type
    PetTypeDto response_type = new PetTypeDto();
    // Mapping field: name
    String response_type_name = response.getType().getName();
    response_type.setName(response_type_name);
    // Mapping field: id
    Integer response_type_id = response.getType().getId();
    response_type.setId(response_type_id);
    response_.setType(response_type);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: ownerId
    Integer response_ownerId = response.getOwnerId();
    response_.setOwnerId(response_ownerId);
    // Mapping field: visits
    java.util.List<VisitDto> response_visits = new java.util.ArrayList<>();
    for (var item1 : response.getVisits()) {
      VisitDto item1_ = new VisitDto();
      // Mapping field: date
      LocalDate item1_date = item1.getDate();
      item1_.setDate(item1_date);
      // Mapping field: description
      String item1_description = item1.getDescription();
      item1_.setDescription(item1_description);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: petId
      Integer item1_petId = item1.getPetId();
      item1_.setPetId(item1_petId);
      response_visits.add(item1_);
    }
    response_.setVisits(response_visits);
    return response_;
  }

  public PetDto addPetToOwner(Integer ownerId, PetFieldsDtoInput petFieldsDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer ownerId_ = ownerId;
    PetFieldsDto petFieldsDto_ = new PetFieldsDto();
    // Mapping field: name
    String petFieldsDto_name = petFieldsDto.getName();
    petFieldsDto_.setName(petFieldsDto_name);
    // Mapping field: birthDate
    LocalDate petFieldsDto_birthDate = petFieldsDto.getBirthDate();
    petFieldsDto_.setBirthDate(petFieldsDto_birthDate);
    // Mapping field: type
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petFieldsDto_type = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petFieldsDto_type_name = petFieldsDto.getType().getName();
    petFieldsDto_type.setName(petFieldsDto_type_name);
    // Mapping field: id
    Integer petFieldsDto_type_id = petFieldsDto.getType().getId();
    petFieldsDto_type.setId(petFieldsDto_type_id);
    petFieldsDto_.setType(petFieldsDto_type);

    org.springframework.samples.petclinic.rest.dto.PetDto response = ownersApi.addPetToOwner(ownerId_, petFieldsDto_).getBody();

    PetDto response_ = new PetDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: birthDate
    LocalDate response_birthDate = response.getBirthDate();
    response_.setBirthDate(response_birthDate);
    // Mapping field: type
    PetTypeDto response_type = new PetTypeDto();
    // Mapping field: name
    String response_type_name = response.getType().getName();
    response_type.setName(response_type_name);
    // Mapping field: id
    Integer response_type_id = response.getType().getId();
    response_type.setId(response_type_id);
    response_.setType(response_type);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: ownerId
    Integer response_ownerId = response.getOwnerId();
    response_.setOwnerId(response_ownerId);
    // Mapping field: visits
    java.util.List<VisitDto> response_visits = new java.util.ArrayList<>();
    for (var item1 : response.getVisits()) {
      VisitDto item1_ = new VisitDto();
      // Mapping field: date
      LocalDate item1_date = item1.getDate();
      item1_.setDate(item1_date);
      // Mapping field: description
      String item1_description = item1.getDescription();
      item1_.setDescription(item1_description);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: petId
      Integer item1_petId = item1.getPetId();
      item1_.setPetId(item1_petId);
      response_visits.add(item1_);
    }
    response_.setVisits(response_visits);
    return response_;
  }

  public PetTypeDto addPetType(PetTypeDtoInput petTypeDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petTypeDto_ = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petTypeDto_name = petTypeDto.getName();
    petTypeDto_.setName(petTypeDto_name);
    // Mapping field: id
    Integer petTypeDto_id = petTypeDto.getId();
    petTypeDto_.setId(petTypeDto_id);

    org.springframework.samples.petclinic.rest.dto.PetTypeDto response = pettypesApi.addPetType(petTypeDto_).getBody();

    PetTypeDto response_ = new PetTypeDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public SpecialtyDto addSpecialty(SpecialtyDtoInput specialtyDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.SpecialtyDto specialtyDto_ = new org.springframework.samples.petclinic.rest.dto.SpecialtyDto();
    // Mapping field: id
    Integer specialtyDto_id = specialtyDto.getId();
    specialtyDto_.setId(specialtyDto_id);
    // Mapping field: name
    String specialtyDto_name = specialtyDto.getName();
    specialtyDto_.setName(specialtyDto_name);

    org.springframework.samples.petclinic.rest.dto.SpecialtyDto response = specialtiesApi.addSpecialty(specialtyDto_).getBody();

    SpecialtyDto response_ = new SpecialtyDto();
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    return response_;
  }

  public UserDto addUser(UserDtoInput userDto, DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.UserDto userDto_ = new org.springframework.samples.petclinic.rest.dto.UserDto();
    // Mapping field: username
    String userDto_username = userDto.getUsername();
    userDto_.setUsername(userDto_username);
    // Mapping field: password
    String userDto_password = userDto.getPassword();
    userDto_.setPassword(userDto_password);
    // Mapping field: enabled
    Boolean userDto_enabled = userDto.getEnabled();
    userDto_.setEnabled(userDto_enabled);
    // Mapping field: roles
    java.util.List<org.springframework.samples.petclinic.rest.dto.RoleDto> userDto_roles = new java.util.ArrayList<org.springframework.samples.petclinic.rest.dto.RoleDto>();
    for (int _i_ = 0; _i_ < userDto_roles.size(); _i_++) {
      RoleDto userDto_roles_i = new RoleDto();
      // Mapping field: name
      String userDto_roles_i_name = userDto.getRoles().get(_i_).getName();
      userDto_roles_i.setName(userDto_roles_i_name);
      userDto_roles.add(userDto_roles_i);
    }
    userDto_.setRoles(userDto_roles);

    org.springframework.samples.petclinic.rest.dto.UserDto response = usersApi.addUser(userDto_).getBody();

    UserDto response_ = new UserDto();
    // Mapping field: username
    String response_username = response.getUsername();
    response_.setUsername(response_username);
    // Mapping field: password
    String response_password = response.getPassword();
    response_.setPassword(response_password);
    // Mapping field: enabled
    Boolean response_enabled = response.getEnabled();
    response_.setEnabled(response_enabled);
    // Mapping field: roles
    java.util.List<graphql.model.RoleDto> response_roles = new java.util.ArrayList<>();
    for (var item1 : response.getRoles()) {
      graphql.model.RoleDto item1_ = new graphql.model.RoleDto();
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      response_roles.add(item1_);
    }
    response_.setRoles(response_roles);
    return response_;
  }

  public VetDto addVet(VetDtoInput vetDto, DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.VetDto vetDto_ = new org.springframework.samples.petclinic.rest.dto.VetDto();
    // Mapping field: firstName
    String vetDto_firstName = vetDto.getFirstName();
    vetDto_.setFirstName(vetDto_firstName);
    // Mapping field: lastName
    String vetDto_lastName = vetDto.getLastName();
    vetDto_.setLastName(vetDto_lastName);
    // Mapping field: specialties
    java.util.List<org.springframework.samples.petclinic.rest.dto.SpecialtyDto> vetDto_specialties = new java.util.ArrayList<org.springframework.samples.petclinic.rest.dto.SpecialtyDto>();
    for (int _i_ = 0; _i_ < vetDto_specialties.size(); _i_++) {
      org.springframework.samples.petclinic.rest.dto.SpecialtyDto vetDto_specialties_i = new org.springframework.samples.petclinic.rest.dto.SpecialtyDto();
      // Mapping field: id
      Integer vetDto_specialties_i_id = vetDto.getSpecialties().get(_i_).getId();
      vetDto_specialties_i.setId(vetDto_specialties_i_id);
      // Mapping field: name
      String vetDto_specialties_i_name = vetDto.getSpecialties().get(_i_).getName();
      vetDto_specialties_i.setName(vetDto_specialties_i_name);
      vetDto_specialties.add(vetDto_specialties_i);
    }
    vetDto_.setSpecialties(vetDto_specialties);
    // Mapping field: id
    Integer vetDto_id = vetDto.getId();
    vetDto_.setId(vetDto_id);

    org.springframework.samples.petclinic.rest.dto.VetDto response = vetsApi.addVet(vetDto_).getBody();

    VetDto response_ = new VetDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: specialties
    java.util.List<SpecialtyDto> response_specialties = new java.util.ArrayList<>();
    for (var item1 : response.getSpecialties()) {
      SpecialtyDto item1_ = new SpecialtyDto();
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      response_specialties.add(item1_);
    }
    response_.setSpecialties(response_specialties);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public VisitDto addVisit(VisitDtoInput visitDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    org.springframework.samples.petclinic.rest.dto.VisitDto visitDto_ = new org.springframework.samples.petclinic.rest.dto.VisitDto();
    // Mapping field: date
    LocalDate visitDto_date = visitDto.getDate();
    visitDto_.setDate(visitDto_date);
    // Mapping field: description
    String visitDto_description = visitDto.getDescription();
    visitDto_.setDescription(visitDto_description);
    // Mapping field: id
    Integer visitDto_id = visitDto.getId();
    visitDto_.setId(visitDto_id);
    // Mapping field: petId
    Integer visitDto_petId = visitDto.getPetId();
    visitDto_.setPetId(visitDto_petId);

    org.springframework.samples.petclinic.rest.dto.VisitDto response = visitsApi.addVisit(visitDto_).getBody();

    VisitDto response_ = new VisitDto();
    // Mapping field: date
    LocalDate response_date = response.getDate();
    response_.setDate(response_date);
    // Mapping field: description
    String response_description = response.getDescription();
    response_.setDescription(response_description);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: petId
    Integer response_petId = response.getPetId();
    response_.setPetId(response_petId);
    return response_;
  }

  public VisitDto addVisitToOwner(Integer ownerId, Integer petId,
      VisitFieldsDtoInput visitFieldsDto, DataFetchingEnvironment dataFetchingEnvironment) {
    Integer ownerId_ = ownerId;
    Integer petId_ = petId;
    VisitFieldsDto visitFieldsDto_ = new VisitFieldsDto();
    // Mapping field: date
    LocalDate visitFieldsDto_date = visitFieldsDto.getDate();
    visitFieldsDto_.setDate(visitFieldsDto_date);
    // Mapping field: description
    String visitFieldsDto_description = visitFieldsDto.getDescription();
    visitFieldsDto_.setDescription(visitFieldsDto_description);

    org.springframework.samples.petclinic.rest.dto.VisitDto response = ownersApi.addVisitToOwner(ownerId_, petId_, visitFieldsDto_).getBody();

    VisitDto response_ = new VisitDto();
    // Mapping field: date
    LocalDate response_date = response.getDate();
    response_.setDate(response_date);
    // Mapping field: description
    String response_description = response.getDescription();
    response_.setDescription(response_description);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: petId
    Integer response_petId = response.getPetId();
    response_.setPetId(response_petId);
    return response_;
  }

  public OwnerDto deleteOwner(Integer ownerId, DataFetchingEnvironment dataFetchingEnvironment) {
    Integer ownerId_ = ownerId;

    org.springframework.samples.petclinic.rest.dto.OwnerDto response = ownersApi.deleteOwner(ownerId_).getBody();

    OwnerDto response_ = new OwnerDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: address
    String response_address = response.getAddress();
    response_.setAddress(response_address);
    // Mapping field: city
    String response_city = response.getCity();
    response_.setCity(response_city);
    // Mapping field: telephone
    String response_telephone = response.getTelephone();
    response_.setTelephone(response_telephone);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: pets
    java.util.List<PetDto> response_pets = new java.util.ArrayList<>();
    for (var item1 : response.getPets()) {
      PetDto item1_ = new PetDto();
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      // Mapping field: birthDate
      LocalDate item1_birthDate = item1.getBirthDate();
      item1_.setBirthDate(item1_birthDate);
      // Mapping field: type
      PetTypeDto item1_type = new PetTypeDto();
      // Mapping field: name
      String item1_type_name = item1.getType().getName();
      item1_type.setName(item1_type_name);
      // Mapping field: id
      Integer item1_type_id = item1.getType().getId();
      item1_type.setId(item1_type_id);
      item1_.setType(item1_type);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: ownerId
      Integer item1_ownerId = item1.getOwnerId();
      item1_.setOwnerId(item1_ownerId);
      // Mapping field: visits
      java.util.List<VisitDto> item1_visits = new java.util.ArrayList<>();
      for (var item2 : item1.getVisits()) {
        VisitDto item2_ = new VisitDto();
        // Mapping field: date
        LocalDate item2_date = item2.getDate();
        item2_.setDate(item2_date);
        // Mapping field: description
        String item2_description = item2.getDescription();
        item2_.setDescription(item2_description);
        // Mapping field: id
        Integer item2_id = item2.getId();
        item2_.setId(item2_id);
        // Mapping field: petId
        Integer item2_petId = item2.getPetId();
        item2_.setPetId(item2_petId);
        item1_visits.add(item2_);
      }
      item1_.setVisits(item1_visits);
      response_pets.add(item1_);
    }
    response_.setPets(response_pets);
    return response_;
  }

  public PetDto deletePet(Integer petId, DataFetchingEnvironment dataFetchingEnvironment) {
    Integer petId_ = petId;

    org.springframework.samples.petclinic.rest.dto.PetDto response = petsApi.deletePet(petId_).getBody();

    PetDto response_ = new PetDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: birthDate
    LocalDate response_birthDate = response.getBirthDate();
    response_.setBirthDate(response_birthDate);
    // Mapping field: type
    PetTypeDto response_type = new PetTypeDto();
    // Mapping field: name
    String response_type_name = response.getType().getName();
    response_type.setName(response_type_name);
    // Mapping field: id
    Integer response_type_id = response.getType().getId();
    response_type.setId(response_type_id);
    response_.setType(response_type);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: ownerId
    Integer response_ownerId = response.getOwnerId();
    response_.setOwnerId(response_ownerId);
    // Mapping field: visits
    java.util.List<VisitDto> response_visits = new java.util.ArrayList<>();
    for (var item1 : response.getVisits()) {
      VisitDto item1_ = new VisitDto();
      // Mapping field: date
      LocalDate item1_date = item1.getDate();
      item1_.setDate(item1_date);
      // Mapping field: description
      String item1_description = item1.getDescription();
      item1_.setDescription(item1_description);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: petId
      Integer item1_petId = item1.getPetId();
      item1_.setPetId(item1_petId);
      response_visits.add(item1_);
    }
    response_.setVisits(response_visits);
    return response_;
  }

  public PetTypeDto deletePetType(Integer petTypeId,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer petTypeId_ = petTypeId;

    org.springframework.samples.petclinic.rest.dto.PetTypeDto response = pettypesApi.deletePetType(petTypeId_).getBody();

    PetTypeDto response_ = new PetTypeDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public SpecialtyDto deleteSpecialty(Integer specialtyId,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer specialtyId_ = specialtyId;

    org.springframework.samples.petclinic.rest.dto.SpecialtyDto response = specialtiesApi.deleteSpecialty(specialtyId_).getBody();

    SpecialtyDto response_ = new SpecialtyDto();
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    return response_;
  }

  public VetDto deleteVet(Integer vetId, DataFetchingEnvironment dataFetchingEnvironment) {
    Integer vetId_ = vetId;

    org.springframework.samples.petclinic.rest.dto.VetDto response = vetsApi.deleteVet(vetId_).getBody();

    VetDto response_ = new VetDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: specialties
    java.util.List<SpecialtyDto> response_specialties = new java.util.ArrayList<>();
    for (var item1 : response.getSpecialties()) {
      SpecialtyDto item1_ = new SpecialtyDto();
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      response_specialties.add(item1_);
    }
    response_.setSpecialties(response_specialties);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public VisitDto deleteVisit(Integer visitId, DataFetchingEnvironment dataFetchingEnvironment) {
    Integer visitId_ = visitId;

    org.springframework.samples.petclinic.rest.dto.VisitDto response = visitsApi.deleteVisit(visitId_).getBody();

    VisitDto response_ = new VisitDto();
    // Mapping field: date
    LocalDate response_date = response.getDate();
    response_.setDate(response_date);
    // Mapping field: description
    String response_description = response.getDescription();
    response_.setDescription(response_description);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: petId
    Integer response_petId = response.getPetId();
    response_.setPetId(response_petId);
    return response_;
  }

  public OwnerDto updateOwner(Integer ownerId, OwnerFieldsDtoInput ownerFieldsDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer ownerId_ = ownerId;
    OwnerFieldsDto ownerFieldsDto_ = new OwnerFieldsDto();
    // Mapping field: firstName
    String ownerFieldsDto_firstName = ownerFieldsDto.getFirstName();
    ownerFieldsDto_.setFirstName(ownerFieldsDto_firstName);
    // Mapping field: lastName
    String ownerFieldsDto_lastName = ownerFieldsDto.getLastName();
    ownerFieldsDto_.setLastName(ownerFieldsDto_lastName);
    // Mapping field: address
    String ownerFieldsDto_address = ownerFieldsDto.getAddress();
    ownerFieldsDto_.setAddress(ownerFieldsDto_address);
    // Mapping field: city
    String ownerFieldsDto_city = ownerFieldsDto.getCity();
    ownerFieldsDto_.setCity(ownerFieldsDto_city);
    // Mapping field: telephone
    String ownerFieldsDto_telephone = ownerFieldsDto.getTelephone();
    ownerFieldsDto_.setTelephone(ownerFieldsDto_telephone);

    org.springframework.samples.petclinic.rest.dto.OwnerDto response = ownersApi.updateOwner(ownerId_, ownerFieldsDto_).getBody();

    OwnerDto response_ = new OwnerDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: address
    String response_address = response.getAddress();
    response_.setAddress(response_address);
    // Mapping field: city
    String response_city = response.getCity();
    response_.setCity(response_city);
    // Mapping field: telephone
    String response_telephone = response.getTelephone();
    response_.setTelephone(response_telephone);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: pets
    java.util.List<PetDto> response_pets = new java.util.ArrayList<>();
    for (var item1 : response.getPets()) {
      PetDto item1_ = new PetDto();
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      // Mapping field: birthDate
      LocalDate item1_birthDate = item1.getBirthDate();
      item1_.setBirthDate(item1_birthDate);
      // Mapping field: type
      PetTypeDto item1_type = new PetTypeDto();
      // Mapping field: name
      String item1_type_name = item1.getType().getName();
      item1_type.setName(item1_type_name);
      // Mapping field: id
      Integer item1_type_id = item1.getType().getId();
      item1_type.setId(item1_type_id);
      item1_.setType(item1_type);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: ownerId
      Integer item1_ownerId = item1.getOwnerId();
      item1_.setOwnerId(item1_ownerId);
      // Mapping field: visits
      java.util.List<VisitDto> item1_visits = new java.util.ArrayList<>();
      for (var item2 : item1.getVisits()) {
        VisitDto item2_ = new VisitDto();
        // Mapping field: date
        LocalDate item2_date = item2.getDate();
        item2_.setDate(item2_date);
        // Mapping field: description
        String item2_description = item2.getDescription();
        item2_.setDescription(item2_description);
        // Mapping field: id
        Integer item2_id = item2.getId();
        item2_.setId(item2_id);
        // Mapping field: petId
        Integer item2_petId = item2.getPetId();
        item2_.setPetId(item2_petId);
        item1_visits.add(item2_);
      }
      item1_.setVisits(item1_visits);
      response_pets.add(item1_);
    }
    response_.setPets(response_pets);
    return response_;
  }

  public Void updateOwnersPet(Integer ownerId, Integer petId, PetFieldsDtoInput petFieldsDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer ownerId_ = ownerId;
    Integer petId_ = petId;
    PetFieldsDto petFieldsDto_ = new PetFieldsDto();
    // Mapping field: name
    String petFieldsDto_name = petFieldsDto.getName();
    petFieldsDto_.setName(petFieldsDto_name);
    // Mapping field: birthDate
    LocalDate petFieldsDto_birthDate = petFieldsDto.getBirthDate();
    petFieldsDto_.setBirthDate(petFieldsDto_birthDate);
    // Mapping field: type
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petFieldsDto_type = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petFieldsDto_type_name = petFieldsDto.getType().getName();
    petFieldsDto_type.setName(petFieldsDto_type_name);
    // Mapping field: id
    Integer petFieldsDto_type_id = petFieldsDto.getType().getId();
    petFieldsDto_type.setId(petFieldsDto_type_id);
    petFieldsDto_.setType(petFieldsDto_type);

    java.lang.Void response = ownersApi.updateOwnersPet(ownerId_, petId_, petFieldsDto_).getBody();

    Void response_ = new Void();
    return response_;
  }

  public PetDto updatePet(Integer petId, PetDtoInput petDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer petId_ = petId;
    org.springframework.samples.petclinic.rest.dto.PetDto petDto_ = new org.springframework.samples.petclinic.rest.dto.PetDto();
    // Mapping field: name
    String petDto_name = petDto.getName();
    petDto_.setName(petDto_name);
    // Mapping field: birthDate
    LocalDate petDto_birthDate = petDto.getBirthDate();
    petDto_.setBirthDate(petDto_birthDate);
    // Mapping field: type
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petDto_type = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petDto_type_name = petDto.getType().getName();
    petDto_type.setName(petDto_type_name);
    // Mapping field: id
    Integer petDto_type_id = petDto.getType().getId();
    petDto_type.setId(petDto_type_id);
    petDto_.setType(petDto_type);
    // Mapping field: id
    Integer petDto_id = petDto.getId();
    petDto_.setId(petDto_id);
    // Mapping field: ownerId
    Integer petDto_ownerId = petDto.getOwnerId();
    petDto_.setOwnerId(petDto_ownerId);
    // Mapping field: visits
    java.util.List<org.springframework.samples.petclinic.rest.dto.VisitDto> petDto_visits = new java.util.ArrayList<org.springframework.samples.petclinic.rest.dto.VisitDto>();
    for (int _i_ = 0; _i_ < petDto_visits.size(); _i_++) {
      org.springframework.samples.petclinic.rest.dto.VisitDto petDto_visits_i = new org.springframework.samples.petclinic.rest.dto.VisitDto();
      // Mapping field: date
      LocalDate petDto_visits_i_date = petDto.getVisits().get(_i_).getDate();
      petDto_visits_i.setDate(petDto_visits_i_date);
      // Mapping field: description
      String petDto_visits_i_description = petDto.getVisits().get(_i_).getDescription();
      petDto_visits_i.setDescription(petDto_visits_i_description);
      // Mapping field: id
      Integer petDto_visits_i_id = petDto.getVisits().get(_i_).getId();
      petDto_visits_i.setId(petDto_visits_i_id);
      // Mapping field: petId
      Integer petDto_visits_i_petId = petDto.getVisits().get(_i_).getPetId();
      petDto_visits_i.setPetId(petDto_visits_i_petId);
      petDto_visits.add(petDto_visits_i);
    }
    petDto_.setVisits(petDto_visits);

    org.springframework.samples.petclinic.rest.dto.PetDto response = petsApi.updatePet(petId_, petDto_).getBody();

    PetDto response_ = new PetDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: birthDate
    LocalDate response_birthDate = response.getBirthDate();
    response_.setBirthDate(response_birthDate);
    // Mapping field: type
    PetTypeDto response_type = new PetTypeDto();
    // Mapping field: name
    String response_type_name = response.getType().getName();
    response_type.setName(response_type_name);
    // Mapping field: id
    Integer response_type_id = response.getType().getId();
    response_type.setId(response_type_id);
    response_.setType(response_type);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: ownerId
    Integer response_ownerId = response.getOwnerId();
    response_.setOwnerId(response_ownerId);
    // Mapping field: visits
    java.util.List<VisitDto> response_visits = new java.util.ArrayList<>();
    for (var item1 : response.getVisits()) {
      VisitDto item1_ = new VisitDto();
      // Mapping field: date
      LocalDate item1_date = item1.getDate();
      item1_.setDate(item1_date);
      // Mapping field: description
      String item1_description = item1.getDescription();
      item1_.setDescription(item1_description);
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: petId
      Integer item1_petId = item1.getPetId();
      item1_.setPetId(item1_petId);
      response_visits.add(item1_);
    }
    response_.setVisits(response_visits);
    return response_;
  }

  public PetTypeDto updatePetType(Integer petTypeId, PetTypeDtoInput petTypeDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer petTypeId_ = petTypeId;
    org.springframework.samples.petclinic.rest.dto.PetTypeDto petTypeDto_ = new org.springframework.samples.petclinic.rest.dto.PetTypeDto();
    // Mapping field: name
    String petTypeDto_name = petTypeDto.getName();
    petTypeDto_.setName(petTypeDto_name);
    // Mapping field: id
    Integer petTypeDto_id = petTypeDto.getId();
    petTypeDto_.setId(petTypeDto_id);

    org.springframework.samples.petclinic.rest.dto.PetTypeDto response = pettypesApi.updatePetType(petTypeId_, petTypeDto_).getBody();

    PetTypeDto response_ = new PetTypeDto();
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public SpecialtyDto updateSpecialty(Integer specialtyId, SpecialtyDtoInput specialtyDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer specialtyId_ = specialtyId;
    org.springframework.samples.petclinic.rest.dto.SpecialtyDto specialtyDto_ = new org.springframework.samples.petclinic.rest.dto.SpecialtyDto();
    // Mapping field: id
    Integer specialtyDto_id = specialtyDto.getId();
    specialtyDto_.setId(specialtyDto_id);
    // Mapping field: name
    String specialtyDto_name = specialtyDto.getName();
    specialtyDto_.setName(specialtyDto_name);

    org.springframework.samples.petclinic.rest.dto.SpecialtyDto response = specialtiesApi.updateSpecialty(specialtyId_, specialtyDto_).getBody();

    SpecialtyDto response_ = new SpecialtyDto();
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: name
    String response_name = response.getName();
    response_.setName(response_name);
    return response_;
  }

  public VetDto updateVet(Integer vetId, VetDtoInput vetDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer vetId_ = vetId;
    org.springframework.samples.petclinic.rest.dto.VetDto vetDto_ = new org.springframework.samples.petclinic.rest.dto.VetDto();
    // Mapping field: firstName
    String vetDto_firstName = vetDto.getFirstName();
    vetDto_.setFirstName(vetDto_firstName);
    // Mapping field: lastName
    String vetDto_lastName = vetDto.getLastName();
    vetDto_.setLastName(vetDto_lastName);
    // Mapping field: specialties
    java.util.List<org.springframework.samples.petclinic.rest.dto.SpecialtyDto> vetDto_specialties = new java.util.ArrayList<org.springframework.samples.petclinic.rest.dto.SpecialtyDto>();
    for (int _i_ = 0; _i_ < vetDto_specialties.size(); _i_++) {
      org.springframework.samples.petclinic.rest.dto.SpecialtyDto vetDto_specialties_i = new org.springframework.samples.petclinic.rest.dto.SpecialtyDto();
      // Mapping field: id
      Integer vetDto_specialties_i_id = vetDto.getSpecialties().get(_i_).getId();
      vetDto_specialties_i.setId(vetDto_specialties_i_id);
      // Mapping field: name
      String vetDto_specialties_i_name = vetDto.getSpecialties().get(_i_).getName();
      vetDto_specialties_i.setName(vetDto_specialties_i_name);
      vetDto_specialties.add(vetDto_specialties_i);
    }
    vetDto_.setSpecialties(vetDto_specialties);
    // Mapping field: id
    Integer vetDto_id = vetDto.getId();
    vetDto_.setId(vetDto_id);

    org.springframework.samples.petclinic.rest.dto.VetDto response = vetsApi.updateVet(vetId_, vetDto_).getBody();

    VetDto response_ = new VetDto();
    // Mapping field: firstName
    String response_firstName = response.getFirstName();
    response_.setFirstName(response_firstName);
    // Mapping field: lastName
    String response_lastName = response.getLastName();
    response_.setLastName(response_lastName);
    // Mapping field: specialties
    java.util.List<SpecialtyDto> response_specialties = new java.util.ArrayList<>();
    for (var item1 : response.getSpecialties()) {
      SpecialtyDto item1_ = new SpecialtyDto();
      // Mapping field: id
      Integer item1_id = item1.getId();
      item1_.setId(item1_id);
      // Mapping field: name
      String item1_name = item1.getName();
      item1_.setName(item1_name);
      response_specialties.add(item1_);
    }
    response_.setSpecialties(response_specialties);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    return response_;
  }

  public VisitDto updateVisit(Integer visitId, VisitDtoInput visitDto,
      DataFetchingEnvironment dataFetchingEnvironment) {
    Integer visitId_ = visitId;
    org.springframework.samples.petclinic.rest.dto.VisitDto visitDto_ = new org.springframework.samples.petclinic.rest.dto.VisitDto();
    // Mapping field: date
    LocalDate visitDto_date = visitDto.getDate();
    visitDto_.setDate(visitDto_date);
    // Mapping field: description
    String visitDto_description = visitDto.getDescription();
    visitDto_.setDescription(visitDto_description);
    // Mapping field: id
    Integer visitDto_id = visitDto.getId();
    visitDto_.setId(visitDto_id);
    // Mapping field: petId
    Integer visitDto_petId = visitDto.getPetId();
    visitDto_.setPetId(visitDto_petId);

    org.springframework.samples.petclinic.rest.dto.VisitDto response = visitsApi.updateVisit(visitId_, visitDto_).getBody();

    VisitDto response_ = new VisitDto();
    // Mapping field: date
    LocalDate response_date = response.getDate();
    response_.setDate(response_date);
    // Mapping field: description
    String response_description = response.getDescription();
    response_.setDescription(response_description);
    // Mapping field: id
    Integer response_id = response.getId();
    response_.setId(response_id);
    // Mapping field: petId
    Integer response_petId = response.getPetId();
    response_.setPetId(response_petId);
    return response_;
  }
}
